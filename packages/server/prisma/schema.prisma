// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Branch {
  id           Int           @id @default(autoincrement())
  name         String
  address      String
  contact      String
  employees    Employee[]
  products     Product[]
  transactions Transaction[]
}

model Employee {
  id           Int                   @id @default(autoincrement())
  name         String
  position     String
  contact      String
  salary       Float
  branchId     Int
  branch       Branch                @relation(fields: [branchId], references: [id])
  transactions TransactionEmployee[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Product {
  id                  Int                  @id @default(autoincrement())
  name                String
  stock               Int
  price               Float
  categoryId          Int
  branchId            Int
  branch              Branch               @relation(fields: [branchId], references: [id])
  category            Category             @relation(fields: [categoryId], references: [id])
  transactionProducts TransactionProduct[]
}

model Transaction {
  id                   Int                   @id @default(autoincrement())
  transactionDate      DateTime              @default(now())
  totalAmount          Float
  branchId             Int
  branch               Branch                @relation(fields: [branchId], references: [id])
  transactionProducts  TransactionProduct[]
  transactionEmployees TransactionEmployee[]
}

model TransactionProduct {
  transactionId Int
  productId     Int
  quantity      Int
  subtotal      Float
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  product       Product     @relation(fields: [productId], references: [id])

  @@id([transactionId, productId])
}

model TransactionEmployee {
  transactionId Int
  employeeId    Int
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  employee      Employee    @relation(fields: [employeeId], references: [id])

  @@id([transactionId, employeeId])
}
